{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/airlines/_store/airlines.actions.ts","webpack:///./src/app/airlines/_store/airlines.service.ts","webpack:///./src/app/airlines/_store/airlines.state.ts","webpack:///./src/app/airlines/airlines-list/airlines-list.component.html","webpack:///./src/app/airlines/airlines-list/airlines-list.component.ts","webpack:///./src/app/airlines/airlines.component.html","webpack:///./src/app/airlines/airlines.component.ts","webpack:///./src/app/airlines/airlines.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;IAGE,eAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAClC,CAAC;IAHe,UAAI,GAAG,kBAAkB,CAAC;IAI5C,YAAC;CAAA;AALiB;AAOlB;IAGE,kBAAmB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;IAC5C,CAAC;IAHe,aAAI,GAAG,qBAAqB,CAAC;IAI/C,eAAC;CAAA;AALoB;AAOrB;IAGE,mBAAmB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;IACnC,CAAC;IAHe,cAAI,GAAG,sBAAsB,CAAC;IAIhD,gBAAC;CAAA;AALqB;;;;;;;;;;;;;;;;;;;;;ACfgD;AACpB;AACP;AACC;AAK5C;IAEE,yBAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IACrC,CAAC;IAED,wCAAc,GAAd,UAAe,OAAe;QAC5B,OAAO,IAAI,CAAC,KAAK;aACd,GAAG,CACF,kBAAgB,OAAS,CAC1B;aACA,IAAI,CACH,iEAAU,CAAC,UAAC,GAAa,IAAK,8DAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAhC,CAAgC,CAAC,CAChE,CAAC;IACN,CAAC;IAGD,qCAAW,GAAX,UAAY,EAAU,EAAE,QAAiB;QACvC,OAAO,IAAI,CAAC,KAAK;aACd,GAAG,CACF,kBAAgB,EAAE,SAAI,QAAU,CACjC,CAAC;IACN,CAAC;IArBU,eAAe;QAD3B,gEAAU,EAAE;+EAGgB,+DAAU;OAF1B,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtB2B;;;;;;;;;;;;;;;;;;;;;ACT8B;AACrB;AAC2B;AAEX;AAMrD;IAEE,uBAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;IAC7C,CAAC;IAGD,6BAAK,GAAL,UAAM,EAAmC,EAAE,EAAgB;YAApD,sBAAQ;YAA6B,oBAAO;QACjD,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC;aACzC,IAAI,CACH,0DAAG,CAAC,gBAAM;YACR,QAAQ,CAAC,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAGD,gCAAQ,GAAR,UAAS,EAAmC,EAAE,EAAmB;YAAvD,sBAAQ;YAA6B,oBAAO;QACpD,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,CAAC;aAC3D,IAAI,CACH,0DAAG,CACD,gBAAM,IAAI,eAAQ,CAAC,IAAI,2DAAS,CAAC,MAAM,CAAC,CAAC,EAA/B,CAA+B,CAC1C,CACF,CAAC;IACN,CAAC;IAGD,iCAAS,GAAT,UAAU,EAA6C,EAAE,EAAoB;YAAlE,sBAAQ,EAAE,sBAAQ;YAA6B,oBAAO;QAC/D,IAAI,QAAQ,GAAG,QAAQ,EAAE,CAAC;QAE1B,QAAQ,GAAG,QAAQ,CAAC,GAAG,CACrB,UAAC,CAAU;YACT,QAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAAjC,CAAiC,CACpC,CAAC;QACF,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IA5BD;QADC,0DAAM,CAAC,uDAAK,CAAC;;uFACwC,uDAAK;;8CAO1D;IAGD;QADC,0DAAM,CAAC,0DAAQ,CAAC;;uFACwC,0DAAQ;;iDAOhE;IAGD;QADC,0DAAM,CAAC,2DAAS,CAAC;;uFACkD,2DAAS;;kDAQ5E;IAlCU,aAAa;QAJzB,yDAAK,CAAY;YAChB,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,EAAE;SACb,CAAC;+EAG8B,iEAAe;OAFlC,aAAa,CAoCzB;IAAD,oBAAC;CAAA;AApCyB;;;;;;;;;;;;ACV1B,sRAAsR,6gBAA6gB,QAAQ,2MAA2M,oBAAoB,UAAU,2MAA2M,oBAAoB,UAAU,2MAA2M,oBAAoB,UAAU,mNAAmN,oBAAoB,cAAc,6IAA6I,2BAA2B,wS;;;;;;;;;;;;;;;;;;;;;;ACApzD;AACV;AACzB;AACoB;AACnB;AACF;AAO3C;IAYI,+BAAoB,MAAa;QAAjC,iBAIC;QAJmB,WAAM,GAAN,MAAM,CAAO;QAVjC,qBAAgB,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QAE1E,eAAU,GAAgC,IAAI,oEAAkB,EAAW,CAAC;QAIpE,gBAAW,GAAG,IAAI,4CAAO,EAAE,CAAC;QAKhC,IAAI,CAAC,SAAS;aACT,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACjC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,EAA3B,CAA2B,CAAC,CAAC;IACxD,CAAC;IAED,+CAAe,GAAf;QACI,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC/C,CAAC;IAED,2CAAW,GAAX;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IAED,8CAAc,GAAd,UAAe,EAAU,EAAE,QAAiB;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,4EAAQ,CAAC;YAC9B,EAAE,EAAE,EAAE;YACN,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC,CAAC;IACR,CAAC;IA1BwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;4DAAC;IAIvC;QAAT,0DAAM,EAAE;wEAAY,+CAAU;4DAAY;IAVlC,qBAAqB;QAJjC,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,oIAA6C;SAChD,CAAC;+EAa8B,iDAAK;OAZxB,qBAAqB,CAiCjC;IAAD,4BAAC;CAAA;AAjCiC;;;;;;;;;;;;ACZlC,wKAAwK,KAAK,uG;;;;;;;;;;;;;;;;;;;ACAnI;AACN;AACc;AAMlD;IAME,2BAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QAJjC,cAAS,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;QAE1D,aAAQ,GAAG,aAAa,CAAC;QAG/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC;IAED,sBAAI,sCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC;;;OALA;IAOO,iCAAK,GAAb,UAAc,OAAe;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,6DAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3C,CAAC;IArBU,iBAAiB;QAJ7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,4GAAwC;SACzC,CAAC;+EAO4B,iDAAK;OANtB,iBAAiB,CAuB7B;IAAD,wBAAC;CAAA;AAvB6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiB;AACS;AACf;AACe;AAQ7B;AACc;AACe;AACwB;AACvB;AACc;AA6BvE;IAAA;IAEA,CAAC;IAFY,cAAc;QA3B1B,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,qEAAiB;gBACjB,4FAAqB;aACxB;YACD,OAAO,EAAE;gBACL,UAAU;gBACV,4DAAY;gBACZ,qEAAgB;gBAChB,WAAW;gBACX,qEAAgB;gBAChB,iEAAe;gBACf,uEAAqB;gBACrB,+DAAa;gBACb,oEAAkB;gBAClB,iEAAe;gBACf,gEAAc;gBACd,OAAO;gBACP,sDAAU,CAAC,UAAU,CAAC,CAAC,mEAAa,CAAC,CAAC;aACzC;YACD,SAAS,EAAE;gBACP,oFAAe;aAClB;YACD,OAAO,EAAE;gBACL,qEAAiB;aACpB;SACJ,CAAC;OACW,cAAc,CAE1B;IAAD,qBAAC;CAAA;AAF0B;;;;;;;;;;;;AC7C3B,oD;;;;;;;;;;;ACAA,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACiB;AACqB;AACT;AACT;AACpB;AACmB;AAGb;AAmB/C;IAAA;IACA,CAAC;IADY,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,OAAO;gBACP,sDAAU,CAAC,OAAO,CAAC,EAAE,CAAC;gBACtB,mFAA6B,CAAC,OAAO,EAAE;gBACvC,0EAAsB,CAAC,OAAO,EAAE;gBAChC,MAAM;gBACN,wEAAc;aACf;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;;AC5BtB;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Airline } from './airlines.model';\n\nexport class Query {\n  static readonly type = '[Airlines] query';\n\n  constructor(public payload: string) {\n  }\n}\n\nexport class Favorize {\n  static readonly type = '[Airlines] favorize';\n\n  constructor(public payload: Partial<Airline>) {\n  }\n}\n\nexport class Favorized {\n  static readonly type = '[Airlines] favorized';\n\n  constructor(public payload: Airline) {\n  }\n}\n","\nimport {throwError as observableThrowError,  Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { Airline } from './airlines.model';\n\n\n@Injectable()\nexport class AirlinesService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  getAirlineList(country: string): Observable<Airline[]> {\n    return this._http\n      .get<Airline[]>(\n        `/api/airline/${country}`\n      )\n      .pipe(\n        catchError((err: Response) => observableThrowError(err.json()))\n      );\n  }\n\n\n  setFavorite(id: number, favorite: boolean) {\n    return this._http\n      .get<Airline>(\n        `/api/airline/${id}/${favorite}`\n      );\n  }\n}\n","import { Action, State, StateContext } from '@ngxs/store';\nimport { tap } from 'rxjs/operators';\nimport { Favorize, Favorized, Query } from './airlines.actions';\nimport { Airline } from './airlines.model';\nimport { AirlinesService } from './airlines.service';\n\n@State<Airline[]>({\n  name: 'airlines',\n  defaults: []\n})\nexport class AirlinesState {\n\n  constructor(private _service: AirlinesService) {\n  }\n\n  @Action(Query)\n  query({setState}: StateContext<Airline[]>, {payload}: Query) {\n    return this._service.getAirlineList(payload)\n      .pipe(\n        tap(result => {\n          setState(result);\n        })\n      );\n  }\n\n  @Action(Favorize)\n  favorize({dispatch}: StateContext<Airline[]>, {payload}: Favorize) {\n    return this._service.setFavorite(payload.id, payload.favorite)\n      .pipe(\n        tap(\n          result => dispatch(new Favorized(result))\n        )\n      );\n  }\n\n  @Action(Favorized)\n  favorized({getState, setState}: StateContext<Airline[]>, {payload}: Favorized) {\n    let airlines = getState();\n\n    airlines = airlines.map(\n      (a: Airline) =>\n        a.id === payload.id ? payload : a\n    );\n    setState(airlines);\n  }\n\n}\n","module.exports = \"<mat-table #table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"flightId\\\" matSortDirection=\\\"asc\\\"\\n           matSortDisableClear>\\n\\n  <ng-container matColumnDef=\\\"favorite\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"5\\\">&nbsp;</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"5\\\">\\n      <button mat-icon-button (click)=\\\"updateFavorite(row.id, !row.favorite)\\\">\\n        <mat-icon *ngIf=\\\"row.favorite\\\">favorite</mat-icon>\\n        <mat-icon *ngIf=\\\"!row.favorite\\\">favorite_border</mat-icon>\\n      </button>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"10\\\">ID</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"10\\\">{{row.id}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"40\\\">Name</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row;\\\" fxFlex=\\\"40\\\"> {{row.name}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"iata\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"15\\\">IATA</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row;\\\" fxFlex=\\\"15\\\"> {{row.iata}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"icao\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"15\\\">ICAO</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row;\\\" fxFlex=\\\"15\\\"> {{row.icao}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"callsign\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"15\\\">Callsign</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row;\\\" fxFlex=\\\"15\\\"> {{row.callsign}}</mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n</mat-table>\\n\\n<mat-paginator #paginator\\n               [length]=\\\"dataSource.length\\\"\\n               [pageIndex]=\\\"0\\\"\\n               [pageSize]=\\\"5\\\"\\n               [pageSizeOptions]=\\\"[5,10,25,100]\\\"\\n               [showFirstLastButtons]=\\\"true\\\">\\n\\n</mat-paginator>\\n\"","import { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\nimport { Select, Store } from '@ngxs/store';\nimport { Favorize } from 'app/airlines/_store/airlines.actions';\nimport { Observable ,  Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Airline } from '../_store/airlines.model';\n\n@Component({\n    selector: 'demo-airlines-list',\n    templateUrl: './airlines-list.component.html'\n})\nexport class AirlinesListComponent implements AfterViewInit, OnDestroy {\n\n    displayedColumns = ['favorite', 'id', 'name', 'iata', 'icao', 'callsign'];\n\n    dataSource: MatTableDataSource<Airline> = new MatTableDataSource<Airline>();\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    private disconnect$ = new Subject();\n\n    @Select() airlines$: Observable<Airline[]>;\n\n    constructor(private _store: Store) {\n        this.airlines$\n            .pipe(takeUntil(this.disconnect$))\n            .subscribe(data => this.dataSource.data = data);\n    }\n\n    ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator;\n    }\n\n    ngOnDestroy() {\n        this.disconnect$.next();\n        this.disconnect$.complete();\n    }\n\n    updateFavorite(id: number, favorite: boolean) {\n        this._store.dispatch(new Favorize({\n            id: id,\n            favorite: favorite\n        }));\n    }\n}\n","module.exports = \"<mat-form-field>\\n  <mat-select placeholder=\\\"Country\\\" [(value)]=\\\"country\\\">\\n    <mat-option *ngFor=\\\"let c of countries\\\" [value]=\\\"c\\\">\\n      {{ c }}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<demo-airlines-list></demo-airlines-list>\\n\"","import { Component } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Query } from './_store/airlines.actions';\n\n@Component({\n  selector: 'demo-airlines',\n  templateUrl: './airlines.component.html'\n})\nexport class AirlinesComponent {\n\n  countries = ['Brazil', 'India', 'Mexico', 'Netherlands', 'Spain'];\n\n  private _country = 'Netherlands';\n\n  constructor(private _store: Store) {\n    this.query(this._country);\n  }\n\n  get country(): string {\n    return this._country;\n  }\n\n  set country(value: string) {\n    this._country = value;\n    this.query(value);\n  }\n\n  private query(country: string) {\n    this._store.dispatch(new Query(country));\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatSelectModule,\n    MatTableModule\n} from '@angular/material';\nimport { NgxsModule } from '@ngxs/store';\nimport { AirlinesState } from './_store/airlines.state';\nimport { AirlinesListComponent } from './airlines-list/airlines-list.component';\nimport { AirlinesComponent } from './airlines.component';\nimport { AirlinesService } from 'app/airlines/_store/airlines.service';\n\n@NgModule({\n    declarations: [\n        AirlinesComponent,\n        AirlinesListComponent\n    ],\n    imports: [\n        // ANGULAR\n        CommonModule,\n        HttpClientModule,\n        // MATERIAL\n        FlexLayoutModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatIconModule,\n        MatPaginatorModule,\n        MatSelectModule,\n        MatTableModule,\n        // NGXS\n        NgxsModule.forFeature([AirlinesState])\n    ],\n    providers: [\n        AirlinesService\n    ],\n    exports: [\n        AirlinesComponent\n    ]\n})\nexport class AirlinesModule {\n\n}\n","module.exports = \"<demo-airlines></demo-airlines>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { AirlinesModule } from './airlines/airlines.module';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    // NGXS\n    NgxsModule.forRoot([]),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot(),\n    // APP\n    AirlinesModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}